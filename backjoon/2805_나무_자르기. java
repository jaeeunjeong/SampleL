//https://www.acmicpc.net/problem/2805
import java.io.*;
import java.util.*;
/**
 * 이분탐색 + 매개변수 탐색
 * 최소 값과 최대 값을 가지고(이분탐색) 중간 값(매개변수)을 구해내는 것이다.
 * 중간 값을 구해준다.
 * 그 값(자르는 높이)을 기준으로 나무의 길이에서 빼주면 그 나머지가 가지고 갈 수 있는  길이가 된다.
 * 나머지 길이가 원하는 길이보다 크다면 최소값의 길이를 증가시키며 최대한 나무를 길게 자를 수 있도록 중간값을 키워준다.
 * 반대로 나머지의 길이가 원하는 길이보다 작다면 최대값을 감소시켜 나무를 원하는 길이만큼 자르고 그 나머지를 가져갈 수 있도록 한다.
 */
class Main {
	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		long tree = Long.parseLong(st.nextToken());

		st = new StringTokenizer(br.readLine());
		int[] trees = new int[N];
		long max = Long.MIN_VALUE;
		for (int i = 0; i < N; i++) {
			int cur = Integer.parseInt(st.nextToken());
			trees[i] = cur;
			max = Math.max(cur, max);
		}
		long left = 1;
		long right = max;
		long answer = 0;
		while (left <= right) {
			long mid = (left + right) / 2;
			long result = 0;
			for (long t : trees) {
				long temp = t - mid > 0 ? t - mid : 0;
				result += temp;
			}
			if (result >= tree) {
				answer = mid;
				left = mid + 1;
			} else {
				right = mid - 1;
			}
		}

		System.out.println(answer);
	}
}
